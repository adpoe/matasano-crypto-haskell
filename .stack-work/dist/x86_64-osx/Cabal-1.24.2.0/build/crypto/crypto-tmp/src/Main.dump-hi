
==================== FINAL INTERFACE ====================
2017-11-04 22:17:23.234769 UTC

interface main@main:Main 8002
  interface hash: 6c2368b0881338bca17cb9ef6ad0c614
  ABI hash: 47fa281628442642160d9ef045bfb6e4
  export-list hash: ce8c47225c8f037c15b81205019c5e98
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 465f68099f61f8a5cae8609002b6ab2a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.greet
  Main.main
  Main.printConfig
  Main.printNumbers
  Main.printTime
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 time-1.6.0.1@time-1.6.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e35a230d0e21f5f4d36862fb3b070caf
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time a048e60e7371a3987ce3a0670f764932
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.POSIX 7fe9eeaa8d004969a038e9e028c71b79
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
da707c7f8e468755262b451d2669b730
  greet :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (name :: [GHC.Types.Char]) ->
                 GHC.CString.unpackAppendCString#
                   "Hello "#
                   (GHC.Base.++ @ GHC.Types.Char name Main.greet1)) -}
71362e62726a5fd2d1b6ff45f2c02e1a
  greet1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "!"#) -}
e2e1715c4264e55b3f42e70b0db38ad5
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
caf3bc2ecd1496ac58022d4f2bd31f40
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv2 } }) -}
f92df692b3b47ab257b8c2a6071fc2f4
  main2 :: [GHC.Types.Char]
  {- Unfolding: (Main.greet Main.main3) -}
7dcc05ef4d70175a327f1963205aedd8
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "world"#) -}
ba386e9b4bc5ae4732e490db08b97a83
  main4 :: [GHC.Types.Char]
  {- Unfolding: (Main.greet Main.main5) -}
c80a4858adf0632b868f2b00d3dadc71
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bobby"#) -}
26bf250209342d9974c658257fed6a09
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hello world"#) -}
36cff5a12e41734e2736bc9a18de906e
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a86e888dc6ad4a8e97fc26d696fc236f
  printConfig :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.printConfig1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d939ae6a1bb630b8300900acfff12347
  printConfig1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.printConfig2
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ipv3
                   GHC.Types.True
                   ipv2 } }) -}
0506d3df65ddea383933271f05c225bf
  printConfig2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stack.yaml"#) -}
d9893c59d91ba6b4a0c9ea1bcd1b5fea
  printNumbers :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.printNumbers1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7b1177c94f19c4cf5c9de5dbed03bc4e
  printNumbers1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.printNumbers2
                   GHC.Types.True
                   eta) -}
27b43c7d0ccb93e7487d473551ce6ba3
  printNumbers2 :: GHC.Base.String
  {- Unfolding: (case GHC.Show.$w$cshowsPrec1
                        0#
                        Main.printNumbers3
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
14cfa0d58805e8248f7186908bcf3b43
  printNumbers3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7) -}
e9f00863b2ac5060845c5a0df29b0289
  printTime :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.printTime1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
26af6cf0ec9e494d1f39d56d7a7494b7
  printTime1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.Time.Clock.CTimeval.getCTimeval1
                        s of ds { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime
                           (Data.Time.Clock.POSIX.getCurrentTime2
                              ipv1) of ww { (#,#) ww1 ww2 ->
                    case Data.Time.LocalTime.LocalTime.$wutcToLocalTime
                           Data.Time.LocalTime.TimeZone.utc
                           ww1
                           ww2 of ww3 { (#,#) ww4 ww5 ->
                    Data.Time.LocalTime.LocalTime.$w$cshow1
                      ww4
                      ww5
                      Data.Time.LocalTime.TimeZone.utc } })
                   GHC.Types.True
                   ipv }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

